
public class Main {
    public static void main(String[] args) {

        ProductSingle hamburger = new ProductSingle("Hamburger", 5.0);
        ProductSingle fries = new ProductSingle("Fries", 2.0);
        ProductSingle cola = new ProductSingle("Cola", 1.0);


        BurgerJoint burgerJoint = new BurgerJoint();

        burgerJoint.addProduct(hamburger);
        burgerJoint.addProduct(fries);
        burgerJoint.addProduct(cola);

        ProductComposite productComposite = new ProductComposite("Combo 1", 0.1);

        productComposite.addProduct(hamburger);
        productComposite.addProduct(fries);
        productComposite.addProduct(cola);

        burgerJoint.addProduct(productComposite);

        ProductComposite megaProductComposite = new ProductComposite("Mega combo", 0.3);

        megaProductComposite.addProduct(productComposite);
        megaProductComposite.addProduct(productComposite);
        megaProductComposite.addProduct(productComposite);
        megaProductComposite.addProduct(fries);

        burgerJoint.addProduct(megaProductComposite);

        System.out.println(burgerJoint.calculateCartPrice());

    }
}

public class ProductSingle extends Product{

    private Double price;

    public ProductSingle(String name, Double price){
        super(name);
        this.price = price;
    }

    @Override
    public Double calculatePrice(){
        return price;
    }
}
public abstract class Product {

    private String name;

    public Product(String name){
        this.name = name;
    }

    public abstract Double calculatePrice();
}
import java.util.ArrayList;
import java.util.List;

public class ProductComposite extends Product{

    private List<Product> productList;

    private Double discount;

    public ProductComposite(String name, Double discount){
        super(name);
        this.productList = new ArrayList<>();
        this.discount = discount;
    }

    @Override
    public Double calculatePrice(){
        Double finalPrice = 0.0;

        for (Product product : productList) {
            finalPrice += product.calculatePrice();
        }

        return finalPrice - (finalPrice * discount);
    }

    public void addProduct(Product product){
        productList.add(product);
    }
}
import java.util.ArrayList;
import java.util.List;

public class BurgerJoint {

    private List<Product> productCart;

    public BurgerJoint() {
        this.productCart = new ArrayList<>();
    }

    public void addProduct(Product product){
        productCart.add(product);
    }

    public Double calculateCartPrice(){
        Double finalPrice = 0.0;

        for (Product product : productCart) {
            finalPrice += product.calculatePrice();
        }

        return finalPrice;
    }


}
