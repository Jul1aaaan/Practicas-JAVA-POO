import java.util.Vector;

public class Main {
    public static void main(String[] args) {
        Vehicle vehicleStandar = new VehicleStandar("3144", "Red");

        Vehicle vehicleDeluxe = new VehicleDeluxe("41414", "Black", 3.0);

        Driver driver = new Driver("Julian", vehicleStandar);

        driver.howMuchForTrip(3.3);

        driver.setVehicle(vehicleDeluxe);

        driver.howMuchForTrip(3.3);

    }
}
public abstract class Vehicle {

    private String licensePlate;

    private String color;

    private static Double PRICE_PER_KILOMETER = 100.0;


    public Vehicle(String licensePlate, String color){
        this.licensePlate = licensePlate;
        this.color = color;
    }

    public Double calculateFare(Double distance){
        return distance * PRICE_PER_KILOMETER;
    };

}

public class Driver {

    private String name;

    private Vehicle vehicle;

    public Driver(String name, Vehicle vehicle){
        this.name = name;
        this.vehicle = vehicle;
    }

    public Vehicle getVehicle() {
        return vehicle;
    }

    public void setVehicle(Vehicle vehicle) {
        this.vehicle = vehicle;
    }

    public void howMuchForTrip(Double distance){
        System.out.println("That trip will cost you " + vehicle.calculateFare(distance) + "$");
    }
}
public class VehicleStandar extends Vehicle{
    public VehicleStandar(String licensePlate, String color) {
        super(licensePlate, color);
    }

}
public class VehicleDeluxe extends Vehicle{

    private Double priceMultiplier;

    public VehicleDeluxe(String licensePlate, String color, Double priceMultiplier) {
        super(licensePlate, color);
        this.priceMultiplier = priceMultiplier;
    }

    @Override
    public Double calculateFare(Double distance) {
        return super.calculateFare(distance) * priceMultiplier;
    }
}
